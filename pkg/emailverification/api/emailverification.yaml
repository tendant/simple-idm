openapi: 3.0.0
info:
  title: Email Verification API
  version: 1.0.0
  description: API for email verification operations

paths:
  /verify:
    post:
      summary: Verify email with token
      operationId: verify_email
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyEmailRequest'
      responses:
        '200':
          description: Email verified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyEmailResponse'
        '400':
          description: Bad request (invalid token, expired, etc.)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Token not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /resend:
    post:
      summary: Resend verification email
      operationId: resend_verification
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendVerificationRequest'
      responses:
        '200':
          description: Verification email sent successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResendVerificationResponse'
        '400':
          description: Bad request (rate limit exceeded, already verified, etc.)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /status:
    get:
      summary: Get email verification status
      operationId: get_verification_status
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Verification status retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationStatusResponse'
        '401':
          description: Unauthorized
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    VerifyEmailRequest:
      type: object
      required:
        - token
      properties:
        token:
          type: string
          description: Verification token from email
          example: "abc123def456ghi789jkl012mno345pqr678stu901vwx234yz"

    VerifyEmailResponse:
      type: object
      properties:
        message:
          type: string
          example: "Email verified successfully"
        verified_at:
          type: string
          format: date-time
          description: Timestamp when email was verified

    ResendVerificationRequest:
      type: object
      properties:
        user_id:
          type: string
          format: uuid
          description: User ID (optional, defaults to authenticated user)
          example: "123e4567-e89b-12d3-a456-426614174000"

    ResendVerificationResponse:
      type: object
      properties:
        message:
          type: string
          example: "Verification email sent successfully"

    VerificationStatusResponse:
      type: object
      properties:
        email_verified:
          type: boolean
          description: Whether the email is verified
        verified_at:
          type: string
          format: date-time
          description: Timestamp when email was verified (null if not verified)
          nullable: true

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error message
          example: "Token has expired"

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
